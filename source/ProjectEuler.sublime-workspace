{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Can",
				"Candidate_sets"
			],
			[
				"get",
				"get_candidates"
			],
			[
				"File",
				"Filename"
			],
			[
				"is",
				"is_hand1_winner"
			],
			[
				"parse",
				"parse_line"
			],
			[
				"is_",
				"is_hand1_winner_sorted"
			],
			[
				"is_han",
				"is_hand1_winner_same_rank"
			],
			[
				"n",
				"Not_ranked_cards"
			],
			[
				"Ra",
				"Ranked_cards"
			],
			[
				"Par",
				"parse_card"
			],
			[
				"pars",
				"parse_suit"
			],
			[
				"par",
				"parse_value"
			],
			[
				"d",
				"diamonds"
			],
			[
				"is_str",
				"is_straight"
			],
			[
				"W",
				"With_value"
			],
			[
				"ca",
				"calculate_nominator"
			],
			[
				"so",
				"solve_all"
			],
			[
				"T",
				"TIMEOUT"
			],
			[
				"check",
				"check_N"
			],
			[
				"che",
				"check_N"
			],
			[
				"solv",
				"solve"
			],
			[
				"solve",
				"solver_level_1_server"
			],
			[
				"chec",
				"check_right"
			],
			[
				"per",
				"permute_3"
			],
			[
				"Test",
				"Test_Permutations"
			],
			[
				"Tes",
				"Test_Permutations"
			],
			[
				"Group",
				"Groups"
			],
			[
				"sor",
				"sorted_digits"
			],
			[
				"Ca",
				"Candidates"
			],
			[
				"in",
				"int_to_bits"
			],
			[
				"a",
				"all_rotation_prime"
			],
			[
				"pri",
				"prime_below"
			],
			[
				"lis",
				"lists"
			],
			[
				"S",
				"sequence_of_primes"
			],
			[
				"D",
				"Digit"
			],
			[
				"Di",
				"Digits"
			],
			[
				"Le",
				"Levels"
			],
			[
				"read",
				"read_lines"
			],
			[
				"re",
				"read_line"
			],
			[
				"rea",
				"read_lines"
			],
			[
				"oe",
				"open_file"
			],
			[
				"Nex",
				"Next_Current"
			],
			[
				"conver",
				"convert_last_two_digits"
			],
			[
				"Ma",
				"Max_Y"
			],
			[
				"ex",
				"expand"
			],
			[
				"Max",
				"Max_Y"
			],
			[
				"Inde",
				"Indexed"
			],
			[
				"Sor",
				"Sorted_list"
			],
			[
				"ope",
				"open_file"
			],
			[
				"get_",
				"get_number"
			],
			[
				"_",
				"_Max_length"
			],
			[
				"Cha",
				"Chains"
			],
			[
				"L",
				"_Length2"
			],
			[
				"Fac",
				"Factors"
			],
			[
				"Fa",
				"Factors"
			],
			[
				"List",
				"List_of_digit_lists"
			],
			[
				"New",
				"New_sum"
			],
			[
				"fib",
				"fibonachi_below"
			],
			[
				"Li",
				"List"
			],
			[
				"di",
				"dividable_not_both_by_10"
			],
			[
				"sto",
				"stopWatch"
			],
			[
				"inte",
				"intersection"
			],
			[
				"E",
				"ElapsedMilliseconds"
			],
			[
				"list",
				"list_of_primes"
			],
			[
				"can",
				"candidateToken"
			],
			[
				"add",
				"add1ToEach"
			],
			[
				"To",
				"TotalDecent"
			],
			[
				"TotalC",
				"TotalClimb"
			],
			[
				"GetR",
				"GetRequests"
			],
			[
				"DateO",
				"DateOfBirth"
			],
			[
				"bi",
				"binomial"
			],
			[
				"binomi",
				"binomial_loop"
			],
			[
				"Posi",
				"Position"
			],
			[
				"Pos",
				"Position"
			],
			[
				"RestO",
				"RestOfDna2"
			],
			[
				"Res",
				"RestOfDna1"
			],
			[
				"Tra",
				"Transversions"
			],
			[
				"Rest",
				"RestOfDna2"
			],
			[
				"Dna",
				"Dna1"
			],
			[
				"Trans",
				"Transitions"
			],
			[
				"S1",
				"S1_Raw"
			],
			[
				"Intr",
				"Intron"
			],
			[
				"Remove",
				"remove_sub_strings"
			],
			[
				"remove",
				"remove_sub_string"
			],
			[
				"remo",
				"remove_sub_strings2"
			],
			[
				"Intron",
				"Introns"
			],
			[
				"Cou",
				"Count_AA_AA"
			],
			[
				"calcu",
				"calculate"
			],
			[
				"Pro",
				"Protein"
			],
			[
				"Prote",
				"Proteins"
			],
			[
				"print",
				"print_list"
			],
			[
				"Match",
				"Match_list"
			],
			[
				"match",
				"match_all_proteins_with_n_glycosylation_motifs"
			],
			[
				"Lit",
				"List_of_matches"
			],
			[
				"Result",
				"Results"
			],
			[
				"find_",
				"find_motifs_in_proteins"
			],
			[
				"find",
				"find_motifs_in_protein"
			],
			[
				"Protein",
				"Proteins"
			],
			[
				"fin",
				"find_motifs_in_proteins"
			],
			[
				"down",
				"download_uniprot_fasta"
			],
			[
				"get_n",
				"get_n_glycosylation_motifs"
			],
			[
				"protein",
				"protein_t"
			],
			[
				"dna",
				"dna_with_id"
			],
			[
				"no",
				"no_return"
			],
			[
				"st",
				"string"
			],
			[
				"string",
				"string_to_dna"
			],
			[
				"ap",
				"apples"
			],
			[
				"DNA",
				"Dnas"
			],
			[
				"SubS",
				"SubLists"
			],
			[
				"gt",
				"get_dna_lists"
			],
			[
				"generate",
				"generate_combinations"
			],
			[
				"Subs",
				"SubLists"
			],
			[
				"REBAR",
				"REBAR_HOME"
			],
			[
				"rever",
				"reverse_complementary"
			],
			[
				"Comple",
				"Complementary"
			],
			[
				"Ex",
				"ExpectedReverse"
			],
			[
				"mo",
				"motif"
			],
			[
				"Months",
				"MonthsEachRabbitWillLive"
			],
			[
				"wabbit",
				"wabbits2"
			],
			[
				"Va",
				"ValueM"
			],
			[
				"Value",
				"ValueN1"
			],
			[
				"wabbits",
				"wabbits2"
			],
			[
				"Mon",
				"MonthsEachRabbitWillLive"
			],
			[
				"Month",
				"MonthsEachRabbitWillLive"
			],
			[
				"Mat",
				"MatchList"
			],
			[
				"Leng",
				"LengthMatch"
			],
			[
				"Len",
				"LengthContent"
			],
			[
				"Lengt",
				"LengthContent"
			]
		]
	},
	"buffers":
	[
		{
			"file": "solver_server.erl",
			"settings":
			{
				"buffer_size": 7590,
				"line_ending": "Unix"
			}
		},
		{
			"file": "answers.erl",
			"settings":
			{
				"buffer_size": 3842,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: List Packages"
			],
			[
				"iNSTA",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"package",
				"Package Control: Upgrade Package"
			],
			[
				"previ",
				"Markdown Preview: Open Markdown Cheat sheet"
			],
			[
				"preview",
				"Markdown Preview: Preview in Browser"
			],
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"IN",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: List Packages"
			],
			[
				"pac",
				"Package Control: List Packages"
			],
			[
				"",
				"About"
			],
			[
				"git log",
				"Git: Log All"
			]
		],
		"width": 575.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os; pr='Preferences.sublime-settings'; ip='ignored_packages'; n='Package Control'; s=sublime.load_settings(pr); ig=s.get(ip); ig.append(n); s.set(ip,ig); sublime.save_settings('Preferences.sublime-settings'); pf=n+'.sublime-package'; urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler())); by=urllib.request.urlopen('https://packagecontrol.io/'+pf.replace(' ','%20')).read(); open(os.path.join(sublime.installed_packages_path(),pf),'wb').write(by); ig.remove(n); s.set(ip,ig); sublime.save_settings(pr); print('Package Control: 3.0.0 upgrade successful!')",
			"erl",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"c(ex12).",
			"erl",
			"ls"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
	],
	"file_history":
	[
		"/Users/royveshovda/src/ProjectEulerErlang/source/p049.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p060.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p060_test.data",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p051.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p054.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/dns.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/dns.beam",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p079.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p072.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/my_math.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p071.erl",
		"/Users/royveshovda/src/rveshovda.github.io/GemFile",
		"/Users/royveshovda/src/ProjectEulerErlang/source/helper.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p042.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p097.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p063.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p056.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p055.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p053.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p052.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p048.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p043.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p041.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p038.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p037.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p035.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p033.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p032.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p030.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p029.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p025.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p024.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p015.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p004.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p022.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p020.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p099.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p059.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p069.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/primes.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/prime_server.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p050.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/common.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p057.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p058.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/calculator.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p036.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/solver_server.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/solver_level_1_server.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/solver_level_20_server.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/solver_level_19_server.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/solver_level_18_server.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/solver_level_17_server.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/solver_level_16_server.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/solver_level_15_server.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/solver_level_14_server.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/solver_level_13_server.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/solver_level_12_server.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/solver_level_11_server.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/solver_level_10_server.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/solver_level_9_server.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/solver_level_8_server.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/solver_level_7_server.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/solver_level_6_server.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/solver_level_5_server.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/solver_level_4_server.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/solver_level_3_server.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/solver_level_2_server.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p047.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p046.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/erl_crash.dump",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p067.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p018.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p045.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p044.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p040.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p039.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p034.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p031.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p028.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p027.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p026.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p023.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p021.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p011.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p012.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p013.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p014.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p016.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p017.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p019.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p001.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p002.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p003.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p005.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p006.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p007.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p008.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p009.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/source/p010.erl",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P045.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P038.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P044.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P037.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P033.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P049.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P036.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P035.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P034.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P041.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P010.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P024.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P032.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P031.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P030.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P050.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P048.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P047.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P046.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P043.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P042.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P028.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P027.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P026.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P023.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/P067.md",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/p018_triangle.txt",
		"/Users/royveshovda/src/ProjectEulerErlang/Problems/p067_triangle_test.txt"
	],
	"find":
	{
		"height": 36.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Permu",
			"into_list",
			"calculator",
			"is_palindrome",
			"group",
			"palindrome",
			"get_digits",
			"permute",
			"perm",
			"factorial",
			"get_digits",
			"pow",
			"factorial",
			"integer_to_list",
			"pow",
			"is_prime",
			", ",
			"lists:map",
			"integer",
			"'",
			"++",
			"buffer.AppendFormat(\"NOTE:{0}\\r\\n\", employee.OfficeName);",
			"Apply(",
			"Apply",
			"csproj",
			"Linux",
			":",
			"nuget",
			"string_to_dna",
			"string_to_protein",
			"([$",
			"string_to_dna",
			"string_to_dna([], ConvertedList) ->\n",
			"string_to_dna",
			"path"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			" ",
			"\"",
			","
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "solver_server.erl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7590,
						"regions":
						{
						},
						"selection":
						[
							[
								4079,
								4079
							]
						],
						"settings":
						{
							"syntax": "Packages/Erlang/Erlang.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 838.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "answers.erl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3842,
						"regions":
						{
						},
						"selection":
						[
							[
								1893,
								1899
							]
						],
						"settings":
						{
							"syntax": "Packages/Erlang/Erlang.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 886.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 30.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.variable_get":
	{
		"height": 0.0
	},
	"project": "ProjectEuler.sublime-project",
	"replace":
	{
		"height": 66.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"con",
				"source/Backend/Domain/Constants.cs"
			],
			[
				"emp",
				"source/Backend/Api/Controllers/EmployeeController.cs"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 247.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 2
	}
}
